{"version":3,"file":"plugin.esm.js","sources":["../src/plugin.ts"],"sourcesContent":["import {\n  createApiFactory,\n  createComponentExtension,\n  createPlugin,\n  createRoutableExtension,\n  discoveryApiRef,\n  fetchApiRef,\n} from '@backstage/core-plugin-api';\nimport { S3Client, S3ApiRef } from './api';\n\nimport { rootRouteRef } from './routes';\nimport { useEntity } from '@backstage/plugin-catalog-react';\n\nexport const s3ViewerPlugin = createPlugin({\n  id: 's3-viewer',\n  apis: [\n    createApiFactory({\n      api: S3ApiRef,\n      deps: {\n        discoveryApi: discoveryApiRef,\n        fetchApi: fetchApiRef,\n      },\n      factory: deps => new S3Client(deps),\n    }),\n  ],\n  routes: {\n    root: rootRouteRef,\n  },\n});\n\nexport const S3ViewerPage = s3ViewerPlugin.provide(\n  createRoutableExtension({\n    name: 'S3ViewerPage',\n    component: () =>\n      import('./components/S3ViewerPage/S3ViewerPage').then(m => m.S3ViewerPage),\n    mountPoint: rootRouteRef,\n  }),\n);"],"names":[],"mappings":";;;;AAaO,MAAM,iBAAiB,YAAa,CAAA;AAAA,EACzC,EAAI,EAAA,WAAA;AAAA,EACJ,IAAM,EAAA;AAAA,IACJ,gBAAiB,CAAA;AAAA,MACf,GAAK,EAAA,QAAA;AAAA,MACL,IAAM,EAAA;AAAA,QACJ,YAAc,EAAA,eAAA;AAAA,QACd,QAAU,EAAA;AAAA,OACZ;AAAA,MACA,OAAS,EAAA,CAAA,IAAA,KAAQ,IAAI,QAAA,CAAS,IAAI;AAAA,KACnC;AAAA,GACH;AAAA,EACA,MAAQ,EAAA;AAAA,IACN,IAAM,EAAA;AAAA;AAEV,CAAC;AAEM,MAAM,eAAe,cAAe,CAAA,OAAA;AAAA,EACzC,uBAAwB,CAAA;AAAA,IACtB,IAAM,EAAA,cAAA;AAAA,IACN,SAAA,EAAW,MACT,OAAO,+CAAwC,EAAE,IAAK,CAAA,CAAA,CAAA,KAAK,EAAE,YAAY,CAAA;AAAA,IAC3E,UAAY,EAAA;AAAA,GACb;AACH;;;;"}