{"version":3,"file":"S3ObjectViewer.esm.js","sources":["../../../src/components/S3ObjectViewer/S3ObjectViewer.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { FetchObjectResult } from '@spreadshirt/backstage-plugin-s3-viewer-common';\nimport {\n  Box,\n  Button,\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  IconButton,\n  makeStyles,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport OndemandVideoIcon from '@mui/icons-material/OndemandVideo';\nimport { humanFileSize } from '../../utils';\nimport {\n  LinkButton,\n  Progress,\n  StructuredMetadataTable,\n} from '@backstage/core-components';\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    margin: {\n      marginTop: '10px',\n      marginBottom: '10px',\n    },\n    loading: {\n      width: '90%',\n    },\n    preview: {\n      textAlign: 'center',\n      maxWidth: '50%',\n      maxHeight: '300px',\n    },\n  }),\n);\n\ntype S3PreviewProps = {\n  objectInfo: FetchObjectResult | undefined;\n};\n\nexport const S3Preview = ({ objectInfo }: S3PreviewProps) => {\n  const classes = useStyles();\n\n  const isPreviewAvailable = (obj: FetchObjectResult | undefined) => {\n    if (!obj) {\n      return false;\n    }\n\n    // Content bigger than 2MB\n    if (!obj.contentLength || obj.contentLength > 2000000) {\n      return false;\n    }\n\n    if (\n      ![\n        'image/gif',\n        'image/jpeg',\n        'image/svg+xml',\n        'image/tiff',\n        'image/x-icon',\n        'image/jpg',\n        'image/png',\n      ].includes(obj.contentType) &&\n      // fall back to detecting based on file name if type is unknown\n      !(\n        ['', 'binary/octet-stream', 'application/octet-stream'].includes(\n          obj.contentType,\n        ) && obj.name.match(/\\.(gif|ico|jpg|jpeg|png|svg|tiff)$/)\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const [isPreviewLoading, setIsPreviewLoading] = useState(\n    isPreviewAvailable(objectInfo),\n  );\n\n  const [showVideo, setShowVideo] = useState(false);\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  if (objectInfo?.contentType === 'video/mp4') {\n    return (\n      <>\n        <Box>\n          <Button\n            variant=\"contained\"\n            onClick={() => setShowVideo(true)}\n            startIcon={<OndemandVideoIcon />}\n          >\n            Play Video\n          </Button>\n        </Box>\n\n        <Dialog\n          open={showVideo}\n          onClose={() => setShowVideo(false)}\n          fullScreen={fullScreen}\n          maxWidth=\"md\"\n          fullWidth\n        >\n          <DialogTitle>\n            <Box\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n            >\n              <span>Video Preview</span>\n              <IconButton\n                aria-label=\"close\"\n                onClick={() => setShowVideo(false)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </Box>\n          </DialogTitle>\n\n          <DialogContent dividers>\n            <Box\n              component=\"video\"\n              controls\n              autoPlay\n              sx={{\n                width: '100%',\n                borderRadius: 2,\n                backgroundColor: 'black',\n              }}\n            >\n              <source src={objectInfo.downloadUrl} type=\"video/mp4\" />\n              Your browser does not support the video tag.\n            </Box>\n\n            <Box mt={2}>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                File name: {objectInfo.name}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Content type: {objectInfo.contentType}\n              </Typography>\n            </Box>\n          </DialogContent>\n        </Dialog>\n      </>\n    );\n  }\n\n  if (!isPreviewAvailable(objectInfo) || !objectInfo) {\n    return <Typography variant=\"body2\">no preview available</Typography>;\n  }\n\n  return (\n    <>\n      {isPreviewLoading && <Progress className={classes.loading} />}\n      <img\n        title={`Preview for \"${objectInfo.downloadName}\"`}\n        alt={`Preview for \"${objectInfo.downloadName}\"`}\n        src={objectInfo.downloadUrl}\n        loading=\"lazy\"\n        className={classes.preview}\n        onLoad={() => setIsPreviewLoading(false)}\n        onError={() => setIsPreviewLoading(false)}\n      />\n    </>\n  );\n};\n\ntype S3ObjectViewProps = {\n  objectInfo: FetchObjectResult | undefined;\n  loadingObjectInfo: boolean;\n  errorObjectInfo: Error | undefined;\n};\n\nexport const S3ObjectViewer = ({\n  objectInfo,\n  loadingObjectInfo,\n  errorObjectInfo,\n}: S3ObjectViewProps) => {\n  const classes = useStyles();\n\n  if (loadingObjectInfo) {\n    return <Progress />;\n  } else if (errorObjectInfo) {\n    return <Alert severity=\"error\">{errorObjectInfo.message}</Alert>;\n  } else if (!objectInfo) {\n    return <Alert severity=\"error\">Object not found</Alert>;\n  }\n\n  const getMetadata = (params: FetchObjectResult | undefined) => ({\n    LastModified: params?.lastModified || '-',\n    Size: params\n      ? `${humanFileSize(params.contentLength)} (${params.contentLength} bytes)`\n      : '-',\n    ContentType: params?.contentType || '-',\n    Etag: params?.etag || '-',\n  });\n\n  return (\n    <>\n      <Typography variant=\"h5\">{objectInfo.name}</Typography>\n      <Divider style={{ marginTop: 20, marginBottom: 20 }} />\n      <Grid container>\n        <Grid item xs={12}>\n          <StructuredMetadataTable metadata={getMetadata(objectInfo)} />\n        </Grid>\n        <Grid item xs={12}>\n          <Divider style={{ marginTop: 20, marginBottom: 20 }} />\n        </Grid>\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          className={classes.margin}\n        >\n          <S3Preview objectInfo={objectInfo} />\n        </Grid>\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Grid item xs={6}>\n            <LinkButton\n              style={{ textDecoration: 'none' }}\n              variant=\"outlined\"\n              title={`Download ${objectInfo.downloadName}`}\n              to={objectInfo.downloadUrl}\n              download={objectInfo.downloadName}\n            >\n              Download\n            </LinkButton>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}