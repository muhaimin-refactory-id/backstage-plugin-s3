{"version":3,"file":"plugin.cjs.js","sources":["../../src/service/plugin.ts"],"sourcesContent":["import {\n  BucketStatsProvider,\n  BucketsProvider,\n  CredentialsProvider,\n  S3Api,\n  s3ViewerExtensionPoint,\n} from '@spreadshirt/backstage-plugin-s3-viewer-node';\nimport {\n  coreServices,\n  createBackendPlugin,\n} from '@backstage/backend-plugin-api';\nimport { S3Builder } from './S3Builder';\n\nexport const s3ViewerPlugin = createBackendPlugin({\n  pluginId: 's3-viewer',\n  register(env) {\n    let s3Client: S3Api;\n    let s3CredentialsProvider: CredentialsProvider;\n    let s3BucketsProvider: BucketsProvider;\n    let s3BucketStatsProvider: BucketStatsProvider;\n\n    env.registerExtensionPoint(s3ViewerExtensionPoint, {\n      setClient(client) {\n        if (s3Client !== undefined) {\n          throw new Error('A S3 client has been already set');\n        }\n        s3Client = client;\n      },\n      setCredentialsProvider(credentialsProvider) {\n        if (s3CredentialsProvider !== undefined) {\n          throw new Error('A credentials provider has been already set');\n        }\n        s3CredentialsProvider = credentialsProvider;\n      },\n      setBucketsProvider(bucketsProvider) {\n        if (s3BucketsProvider !== undefined) {\n          throw new Error('A buckets provider has been already set');\n        }\n        s3BucketsProvider = bucketsProvider;\n      },\n      setBucketStatsProvider(bucketStatsProvider) {\n        if (s3BucketStatsProvider !== undefined) {\n          throw new Error('A bucket stats provider has been already set');\n        }\n        s3BucketStatsProvider = bucketStatsProvider;\n      },\n    });\n\n    env.registerInit({\n      deps: {\n        auth: coreServices.auth,\n        logger: coreServices.logger,\n        config: coreServices.rootConfig,\n        scheduler: coreServices.scheduler,\n        discovery: coreServices.discovery,\n        permissions: coreServices.permissions,\n        httpAuth: coreServices.httpAuth,\n        httpRouter: coreServices.httpRouter,\n      },\n      async init(deps) {\n        let builder = S3Builder.createBuilder(deps);\n\n        if (s3Client) {\n          builder = builder.setClient(s3Client);\n        }\n        if (s3CredentialsProvider) {\n          builder = builder.setCredentialsProvider(s3CredentialsProvider);\n        }\n        if (s3BucketsProvider) {\n          builder = builder.setBucketsProvider(s3BucketsProvider);\n        }\n        if (s3BucketStatsProvider) {\n          builder = builder.setBucketStatsProvider(s3BucketStatsProvider);\n        }\n\n        const { router } = await builder.build();\n        deps.httpRouter.use(router);\n\n        // Allow access with Backstage user-cookie as some requests happen client-side\n        // from a `img` and `button` elements, which can't set the token via fetchApi.\n        deps.httpRouter.addAuthPolicy({\n          path: '/stream',\n          allow: 'user-cookie',\n        });\n      },\n    });\n  },\n});\n"],"names":["createBackendPlugin","s3ViewerExtensionPoint","coreServices","S3Builder"],"mappings":";;;;;;AAaO,MAAM,iBAAiBA,oCAAoB,CAAA;AAAA,EAChD,QAAU,EAAA,WAAA;AAAA,EACV,SAAS,GAAK,EAAA;AACZ,IAAI,IAAA,QAAA;AACJ,IAAI,IAAA,qBAAA;AACJ,IAAI,IAAA,iBAAA;AACJ,IAAI,IAAA,qBAAA;AAEJ,IAAA,GAAA,CAAI,uBAAuBC,kDAAwB,EAAA;AAAA,MACjD,UAAU,MAAQ,EAAA;AAChB,QAAA,IAAI,aAAa,KAAW,CAAA,EAAA;AAC1B,UAAM,MAAA,IAAI,MAAM,kCAAkC,CAAA;AAAA;AAEpD,QAAW,QAAA,GAAA,MAAA;AAAA,OACb;AAAA,MACA,uBAAuB,mBAAqB,EAAA;AAC1C,QAAA,IAAI,0BAA0B,KAAW,CAAA,EAAA;AACvC,UAAM,MAAA,IAAI,MAAM,6CAA6C,CAAA;AAAA;AAE/D,QAAwB,qBAAA,GAAA,mBAAA;AAAA,OAC1B;AAAA,MACA,mBAAmB,eAAiB,EAAA;AAClC,QAAA,IAAI,sBAAsB,KAAW,CAAA,EAAA;AACnC,UAAM,MAAA,IAAI,MAAM,yCAAyC,CAAA;AAAA;AAE3D,QAAoB,iBAAA,GAAA,eAAA;AAAA,OACtB;AAAA,MACA,uBAAuB,mBAAqB,EAAA;AAC1C,QAAA,IAAI,0BAA0B,KAAW,CAAA,EAAA;AACvC,UAAM,MAAA,IAAI,MAAM,8CAA8C,CAAA;AAAA;AAEhE,QAAwB,qBAAA,GAAA,mBAAA;AAAA;AAC1B,KACD,CAAA;AAED,IAAA,GAAA,CAAI,YAAa,CAAA;AAAA,MACf,IAAM,EAAA;AAAA,QACJ,MAAMC,6BAAa,CAAA,IAAA;AAAA,QACnB,QAAQA,6BAAa,CAAA,MAAA;AAAA,QACrB,QAAQA,6BAAa,CAAA,UAAA;AAAA,QACrB,WAAWA,6BAAa,CAAA,SAAA;AAAA,QACxB,WAAWA,6BAAa,CAAA,SAAA;AAAA,QACxB,aAAaA,6BAAa,CAAA,WAAA;AAAA,QAC1B,UAAUA,6BAAa,CAAA,QAAA;AAAA,QACvB,YAAYA,6BAAa,CAAA;AAAA,OAC3B;AAAA,MACA,MAAM,KAAK,IAAM,EAAA;AACf,QAAI,IAAA,OAAA,GAAUC,mBAAU,CAAA,aAAA,CAAc,IAAI,CAAA;AAE1C,QAAA,IAAI,QAAU,EAAA;AACZ,UAAU,OAAA,GAAA,OAAA,CAAQ,UAAU,QAAQ,CAAA;AAAA;AAEtC,QAAA,IAAI,qBAAuB,EAAA;AACzB,UAAU,OAAA,GAAA,OAAA,CAAQ,uBAAuB,qBAAqB,CAAA;AAAA;AAEhE,QAAA,IAAI,iBAAmB,EAAA;AACrB,UAAU,OAAA,GAAA,OAAA,CAAQ,mBAAmB,iBAAiB,CAAA;AAAA;AAExD,QAAA,IAAI,qBAAuB,EAAA;AACzB,UAAU,OAAA,GAAA,OAAA,CAAQ,uBAAuB,qBAAqB,CAAA;AAAA;AAGhE,QAAA,MAAM,EAAE,MAAA,EAAW,GAAA,MAAM,QAAQ,KAAM,EAAA;AACvC,QAAK,IAAA,CAAA,UAAA,CAAW,IAAI,MAAM,CAAA;AAI1B,QAAA,IAAA,CAAK,WAAW,aAAc,CAAA;AAAA,UAC5B,IAAM,EAAA,SAAA;AAAA,UACN,KAAO,EAAA;AAAA,SACR,CAAA;AAAA;AACH,KACD,CAAA;AAAA;AAEL,CAAC;;;;"}